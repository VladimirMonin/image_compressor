"""
–í–∏–¥–∂–µ—Ç—ã –¥–ª—è GUI –∫–æ–º–ø—Ä–µ—Å—Å–æ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.
"""

import os
from typing import List
from PyQt6.QtWidgets import (
    QFrame, QVBoxLayout, QHBoxLayout, QLabel, QSlider, QRadioButton, 
    QButtonGroup, QGroupBox, QFileDialog, QLineEdit, QWidget
)
from PyQt6.QtCore import Qt, pyqtSignal
from PyQt6.QtGui import QFont, QDragEnterEvent, QDropEvent

from .styles import DROPZONE_STYLES, DROPZONE_LABEL_STYLE, QUALITY_LABEL_STYLE
from .utils import get_image_files_from_paths


class DropZone(QFrame):
    """–í–∏–¥–∂–µ—Ç –∑–æ–Ω—ã drag & drop –¥–ª—è —Ñ–∞–π–ª–æ–≤."""

    files_dropped = pyqtSignal(list)  # –°–∏–≥–Ω–∞–ª —Å–æ —Å–ø–∏—Å–∫–æ–º —Ñ–∞–π–ª–æ–≤

    def __init__(self):
        super().__init__()
        self.setAcceptDrops(True)
        self.init_ui()

    def init_ui(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∑–æ–Ω—ã."""
        self.setFrameStyle(QFrame.Shape.Box)
        self.setLineWidth(2)
        self.setMinimumHeight(150)

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª—è
        self.setStyleSheet(DROPZONE_STYLES['normal'])

        # –õ–µ–π–±–ª —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π
        layout = QVBoxLayout()
        self.label = QLabel(
            "üìÅ –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Å—é–¥–∞ —Ñ–∞–π–ª—ã –∏–ª–∏ –ø–∞–ø–∫–∏\n–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞"
        )
        self.label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.label.setFont(QFont("Arial", 12))
        self.label.setStyleSheet(DROPZONE_LABEL_STYLE)

        layout.addWidget(self.label)
        self.setLayout(layout)

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –¥–∏–∞–ª–æ–≥–∞
        self.mousePressEvent = self.open_file_dialog

    def dragEnterEvent(self, event: QDragEnterEvent):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—á–∞–ª–∞ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è."""
        if event.mimeData().hasUrls():
            event.accept()
            self.setStyleSheet(DROPZONE_STYLES['active'])
        else:
            event.ignore()

    def dragLeaveEvent(self, event):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã—Ö–æ–¥–∞ –∏–∑ –∑–æ–Ω—ã –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è."""
        self.setStyleSheet(DROPZONE_STYLES['normal'])

    def dropEvent(self, event: QDropEvent):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—É—Å–∫–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤."""
        files = []
        for url in event.mimeData().urls():
            file_path = url.toLocalFile()
            if os.path.exists(file_path):
                files.append(file_path)

        if files:
            self.files_dropped.emit(files)

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ã—á–Ω—ã–π —Å—Ç–∏–ª—å
        self.dragLeaveEvent(event)

    def open_file_dialog(self, event):
        """–û—Ç–∫—Ä—ã—Ç–∏–µ –¥–∏–∞–ª–æ–≥–∞ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–æ–≤."""
        file_dialog = QFileDialog()
        file_dialog.setFileMode(QFileDialog.FileMode.ExistingFiles)
        file_dialog.setNameFilter(
            "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (*.jpg *.jpeg *.png *.heic *.heif *.avif);;–í—Å–µ —Ñ–∞–π–ª—ã (*)"
        )

        if file_dialog.exec():
            files = file_dialog.selectedFiles()
            if files:
                self.files_dropped.emit(files)

    def update_label(self, text: str):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –≤ –ª–µ–π–±–ª–µ."""
        self.label.setText(text)


class QualityWidget(QWidget):
    """–í–∏–¥–∂–µ—Ç –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—á–µ—Å—Ç–≤–∞ —Å–∂–∞—Ç–∏—è."""
    
    value_changed = pyqtSignal(int)
    
    def __init__(self, initial_value: int = 80):
        super().__init__()
        self.init_ui(initial_value)
    
    def init_ui(self, initial_value: int):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤–∏–¥–∂–µ—Ç–∞ –∫–∞—á–µ—Å—Ç–≤–∞."""
        layout = QHBoxLayout()
        layout.addWidget(QLabel("üéõÔ∏è –ö–∞—á–µ—Å—Ç–≤–æ:"))

        self.slider = QSlider(Qt.Orientation.Horizontal)
        self.slider.setRange(1, 100)
        self.slider.setValue(initial_value)
        self.slider.valueChanged.connect(self.on_value_changed)

        self.label = QLabel(str(initial_value))
        self.label.setMinimumWidth(30)
        self.label.setStyleSheet(QUALITY_LABEL_STYLE)

        layout.addWidget(self.slider)
        layout.addWidget(self.label)
        self.setLayout(layout)
    
    def on_value_changed(self, value: int):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∑–Ω–∞—á–µ–Ω–∏—è."""
        self.label.setText(str(value))
        self.value_changed.emit(value)
    
    def get_value(self) -> int:
        """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞."""
        return self.slider.value()


class FormatWidget(QWidget):
    """–í–∏–¥–∂–µ—Ç –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–∞ —Å–∂–∞—Ç–∏—è."""
    
    def __init__(self, default_format: str = "WEBP"):
        super().__init__()
        self.init_ui(default_format)
    
    def init_ui(self, default_format: str):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤–∏–¥–∂–µ—Ç–∞ —Ñ–æ—Ä–º–∞—Ç–∞."""
        layout = QHBoxLayout()
        layout.addWidget(QLabel("üìã –§–æ—Ä–º–∞—Ç:"))

        self.format_group = QButtonGroup()
        self.heif_radio = QRadioButton("HEIF (.heic)")
        self.webp_radio = QRadioButton("WebP (.webp)")
        self.avif_radio = QRadioButton("AVIF (.avif)")
        self.jpeg_radio = QRadioButton("JPEG (.jpg)")

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ—Ä–º–∞—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        if default_format == "HEIF":
            self.heif_radio.setChecked(True)
        elif default_format == "WEBP":
            self.webp_radio.setChecked(True)
        elif default_format == "AVIF":
            self.avif_radio.setChecked(True)
        elif default_format == "JPEG":
            self.jpeg_radio.setChecked(True)
        else:
            self.webp_radio.setChecked(True)

        self.format_group.addButton(self.heif_radio, 0)
        self.format_group.addButton(self.webp_radio, 1)
        self.format_group.addButton(self.avif_radio, 2)
        self.format_group.addButton(self.jpeg_radio, 3)

        layout.addWidget(self.heif_radio)
        layout.addWidget(self.webp_radio)
        layout.addWidget(self.avif_radio)
        layout.addWidget(self.jpeg_radio)
        layout.addStretch()

        self.setLayout(layout)
    
    def get_selected_format(self) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç."""
        if self.heif_radio.isChecked():
            return "HEIF"
        elif self.webp_radio.isChecked():
            return "WEBP"
        elif self.avif_radio.isChecked():
            return "AVIF"
        elif self.jpeg_radio.isChecked():
            return "JPEG"
        return "WEBP"


class FileOptionsWidget(QWidget):
    """–í–∏–¥–∂–µ—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–æ–≤."""
    
    def __init__(self):
        super().__init__()
        self.init_ui()
    
    def init_ui(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤–∏–¥–∂–µ—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ñ–∞–π–ª–æ–≤."""
        layout = QVBoxLayout()

        # –ß–µ–∫–±–æ–∫—Å—ã —É–¥–∞–ª–µ–Ω–∏—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        self.delete_original_radio = QRadioButton("üóëÔ∏è –£–¥–∞–ª—è—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã")
        self.keep_original_radio = QRadioButton("üíæ –°–æ—Ö—Ä–∞–Ω—è—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã")
        self.keep_original_radio.setChecked(True)  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–æ—Ö—Ä–∞–Ω—è–µ–º

        # –ì—Ä—É–ø–ø–∞ –¥–ª—è —Ä–∞–¥–∏–æ–∫–Ω–æ–ø–æ–∫
        self.file_action_group = QButtonGroup()
        self.file_action_group.addButton(self.delete_original_radio, 0)
        self.file_action_group.addButton(self.keep_original_radio, 1)

        layout.addWidget(self.delete_original_radio)
        layout.addWidget(self.keep_original_radio)

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ—Å—Ç—Ñ–∏–∫—Å–∞ –¥–ª—è –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
        postfix_layout = QHBoxLayout()
        postfix_layout.addWidget(QLabel("üìù –ü–æ—Å—Ç—Ñ–∏–∫—Å –ø—Ä–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π:"))
        
        self.postfix_input = QLineEdit("_compressed")
        self.postfix_input.setPlaceholderText("_compressed")
        self.postfix_input.setToolTip("–î–æ–±–∞–≤–ª—è–µ—Ç—Å—è –∫ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ –ø—Ä–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–∏ –≤—Ö–æ–¥–Ω–æ–≥–æ –∏ –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è")
        
        postfix_layout.addWidget(self.postfix_input)
        layout.addLayout(postfix_layout)

        self.setLayout(layout)
    
    def get_delete_original(self) -> bool:
        """–ü–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É —É–¥–∞–ª–µ–Ω–∏—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤."""
        return self.delete_original_radio.isChecked()
    
    def get_postfix(self) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å—Ç—Ñ–∏–∫—Å –¥–ª—è —Ñ–∞–π–ª–æ–≤."""
        return self.postfix_input.text().strip() or "_compressed"
