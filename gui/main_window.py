"""
–ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ GUI –∫–æ–º–ø—Ä–µ—Å—Å–æ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.
"""

import sys
from PyQt6.QtWidgets import (
    QMainWindow,
    QVBoxLayout,
    QHBoxLayout,
    QWidget,
    QLabel,
    QProgressBar,
    QTextEdit,
    QPushButton,
    QGroupBox,
    QMessageBox,
)
from PyQt6.QtCore import Qt
from PyQt6.QtGui import QFont

from .widgets import DropZone, QualityWidget, FormatWidget, FileOptionsWidget
from .worker import CompressionWorker
from .styles import BUTTON_STYLES, PROGRESS_BAR_STYLE, LOG_TEXT_STYLE, TITLE_STYLE
from .utils import get_image_files_from_paths


class ImageCompressorGUI(QMainWindow):
    """–ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ GUI –∫–æ–º–ø—Ä–µ—Å—Å–æ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π."""

    def __init__(self):
        super().__init__()
        self.files_to_process = []
        self.worker = None
        self.init_ui()

    def init_ui(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞."""
        self.setWindowTitle("üñºÔ∏è –ö–æ–º–ø—Ä–µ—Å—Å–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
        self.setMinimumSize(600, 700)
        self.resize(800, 700)

        # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç
        central_widget = QWidget()
        self.setCentralWidget(central_widget)
        main_layout = QVBoxLayout(central_widget)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title = QLabel("üñºÔ∏è –ö–æ–º–ø—Ä–µ—Å—Å–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
        title.setFont(QFont("Arial", 18, QFont.Weight.Bold))
        title.setAlignment(Qt.AlignmentFlag.AlignCenter)
        title.setStyleSheet(TITLE_STYLE)
        main_layout.addWidget(title)

        # –ó–æ–Ω–∞ drag & drop
        self.drop_zone = DropZone()
        self.drop_zone.files_dropped.connect(self.handle_dropped_files)
        main_layout.addWidget(self.drop_zone)

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∂–∞—Ç–∏—è
        settings_group = QGroupBox("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∂–∞—Ç–∏—è")
        settings_layout = QVBoxLayout(settings_group)

        # –ö–∞—á–µ—Å—Ç–≤–æ —Å–∂–∞—Ç–∏—è
        self.quality_widget = QualityWidget(initial_value=80)
        settings_layout.addWidget(self.quality_widget)

        # –í—ã–±–æ—Ä —Ñ–æ—Ä–º–∞—Ç–∞
        self.format_widget = FormatWidget(default_format="WEBP")
        settings_layout.addWidget(self.format_widget)

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–æ–≤
        file_options_group = QGroupBox("üìÅ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–æ–≤")
        file_options_layout = QVBoxLayout(file_options_group)

        self.file_options_widget = FileOptionsWidget()
        self.file_options_widget.show()  # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º
        file_options_layout.addWidget(self.file_options_widget)

        settings_layout.addWidget(file_options_group)
        main_layout.addWidget(settings_group)

        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        self.setup_control_buttons(main_layout)

        # –ü—Ä–æ–≥—Ä–µ—Å—Å
        self.setup_progress_section(main_layout)

        # –õ–æ–≥ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        self.setup_log_section(main_layout)

        # –°—Ç–∞—Ç—É—Å –±–∞—Ä
        self.statusBar().showMessage("–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")

    def setup_control_buttons(self, main_layout):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è."""
        buttons_layout = QHBoxLayout()

        self.start_button = QPushButton("üöÄ –ù–∞—á–∞—Ç—å —Å–∂–∞—Ç–∏–µ")
        self.start_button.setEnabled(False)
        self.start_button.clicked.connect(self.start_compression)
        self.start_button.setStyleSheet(BUTTON_STYLES["start"])

        self.stop_button = QPushButton("‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å")
        self.stop_button.setEnabled(False)
        self.stop_button.clicked.connect(self.stop_compression)
        self.stop_button.setStyleSheet(BUTTON_STYLES["stop"])

        self.clear_button = QPushButton("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –æ—á–µ—Ä–µ–¥—å")
        self.clear_button.setEnabled(False)
        self.clear_button.clicked.connect(self.clear_queue)
        self.clear_button.setStyleSheet(BUTTON_STYLES["clear"])

        buttons_layout.addWidget(self.start_button)
        buttons_layout.addWidget(self.stop_button)
        buttons_layout.addWidget(self.clear_button)
        buttons_layout.addStretch()

        main_layout.addLayout(buttons_layout)

    def setup_progress_section(self, main_layout):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ–∫—Ü–∏–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞."""
        progress_group = QGroupBox("üìä –ü—Ä–æ–≥—Ä–µ—Å—Å")
        progress_layout = QVBoxLayout(progress_group)

        self.progress_bar = QProgressBar()
        self.progress_bar.setStyleSheet(PROGRESS_BAR_STYLE)
        progress_layout.addWidget(self.progress_bar)

        main_layout.addWidget(progress_group)

    def setup_log_section(self, main_layout):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ–∫—Ü–∏–∏ –ª–æ–≥–∞."""
        log_group = QGroupBox("üìù –õ–æ–≥ –æ–±—Ä–∞–±–æ—Ç–∫–∏")
        log_layout = QVBoxLayout(log_group)

        self.log_text = QTextEdit()
        self.log_text.setMaximumHeight(200)
        self.log_text.setStyleSheet(LOG_TEXT_STYLE)
        log_layout.addWidget(self.log_text)

        main_layout.addWidget(log_group)

    def handle_dropped_files(self, files):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ—Ç–∞—â–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤."""
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã—Ö –ø—É—Ç–µ–π
        image_files = get_image_files_from_paths(files)

        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Ñ–∞–π–ª—ã –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º (–Ω–µ –∑–∞–º–µ–Ω—è–µ–º!)
        new_files = []
        for file_path in image_files:
            if file_path not in self.files_to_process:
                new_files.append(file_path)
                self.files_to_process.append(file_path)

        if new_files:
            self.start_button.setEnabled(True)
            self.clear_button.setEnabled(True)  # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –æ—á–∏—Å—Ç–∫–∏
            self.log_text.append(f"üìÅ –î–æ–±–∞–≤–ª–µ–Ω–æ –Ω–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {len(new_files)}")
            self.log_text.append(f"üìä –í—Å–µ–≥–æ –≤ –æ—á–µ—Ä–µ–¥–∏: {len(self.files_to_process)}")
            self.statusBar().showMessage(
                f"–ì–æ—Ç–æ–≤–æ –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ {len(self.files_to_process)} —Ñ–∞–π–ª–æ–≤"
            )

            # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤ –∑–æ–Ω–µ
            self.drop_zone.update_label(
                f"üìÅ –í –æ—á–µ—Ä–µ–¥–∏: {len(self.files_to_process)} —Ñ–∞–π–ª–æ–≤"
            )
        else:
            if not self.files_to_process:
                self.start_button.setEnabled(False)
                self.clear_button.setEnabled(False)
                self.log_text.append("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–æ–≤—ã—Ö –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
                self.statusBar().showMessage("–§–∞–π–ª—ã –Ω–µ –≤—ã–±—Ä–∞–Ω—ã")
            else:
                self.log_text.append("‚ÑπÔ∏è –í—ã–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —É–∂–µ –≤ –æ—á–µ—Ä–µ–¥–∏")

    def start_compression(self):
        """–ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–∂–∞—Ç–∏—è."""
        if not self.files_to_process:
            QMessageBox.warning(
                self, "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏!"
            )
            return

        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        quality = self.quality_widget.get_value()
        format_type = self.format_widget.get_selected_format()
        delete_original = self.file_options_widget.get_delete_original()
        postfix = self.file_options_widget.get_postfix()

        # –ë–ª–æ–∫–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        self.start_button.setEnabled(False)
        self.stop_button.setEnabled(True)
        self.progress_bar.setValue(0)

        # –û—á–∏—â–∞–µ–º –ª–æ–≥
        self.log_text.clear()

        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã
        unique_files = list(dict.fromkeys(self.files_to_process))
        duplicate_count = len(self.files_to_process) - len(unique_files)

        self.log_text.append(f"üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–∂–∞—Ç–∏–µ {len(unique_files)} —Ñ–∞–π–ª–æ–≤...")
        if duplicate_count > 0:
            self.log_text.append(f"‚ö†Ô∏è –£–¥–∞–ª–µ–Ω–æ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤: {duplicate_count}")
        self.log_text.append(f"üìã –§–æ—Ä–º–∞—Ç: {format_type}, –ö–∞—á–µ—Å—Ç–≤–æ: {quality}")
        self.log_text.append(
            f"üóëÔ∏è –£–¥–∞–ª—è—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—ã: {'–î–∞' if delete_original else '–ù–µ—Ç'}"
        )
        if not delete_original:
            self.log_text.append(f"üìù –ü–æ—Å—Ç—Ñ–∏–∫—Å: {postfix}")
        self.log_text.append("=" * 50)

        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–∞–±–æ—á–∏–π –ø–æ—Ç–æ–∫ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏
        self.worker = CompressionWorker(
            unique_files, quality, format_type, delete_original, postfix
        )
        self.worker.progress_updated.connect(self.progress_bar.setValue)
        self.worker.log_message.connect(self.log_text.append)
        self.worker.finished_processing.connect(self.compression_finished)
        self.worker.start()

        self.statusBar().showMessage("–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ...")

    def stop_compression(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–∂–∞—Ç–∏—è."""
        if self.worker and self.worker.isRunning():
            self.worker.cancel()
            self.worker.wait()  # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ—Ç–æ–∫–∞

        self.compression_finished(0, 0, cancelled=True)

    def compression_finished(
        self, successful: int, errors: int, cancelled: bool = False
    ):
        """–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–∂–∞—Ç–∏—è."""
        # –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        self.start_button.setEnabled(True)
        self.stop_button.setEnabled(False)

        if cancelled:
            self.log_text.append("‚èπÔ∏è –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
            self.statusBar().showMessage("–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞")
        else:
            self.log_text.append("=" * 50)
            self.log_text.append(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
            self.log_text.append(f"üìä –£—Å–ø–µ—à–Ω–æ: {successful}, –û—à–∏–±–æ–∫: {errors}")
            self.statusBar().showMessage(
                f"–ì–æ—Ç–æ–≤–æ! –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {successful}, –æ—à–∏–±–æ–∫: {errors}"
            )

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            QMessageBox.information(
                self,
                "–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞",
                f"–£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {successful} —Ñ–∞–π–ª–æ–≤\n–û—à–∏–±–æ–∫: {errors}",
            )

    def clear_queue(self):
        """–û—á–∏—Å—Ç–∫–∞ –æ—á–µ—Ä–µ–¥–∏ —Ñ–∞–π–ª–æ–≤."""
        self.files_to_process = []
        self.start_button.setEnabled(False)
        self.clear_button.setEnabled(False)
        self.drop_zone.update_label(
            "üìÅ –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Å—é–¥–∞ —Ñ–∞–π–ª—ã –∏–ª–∏ –ø–∞–ø–∫–∏\n–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞"
        )
        self.log_text.append("üóëÔ∏è –û—á–µ—Ä–µ–¥—å —Ñ–∞–π–ª–æ–≤ –æ—á–∏—â–µ–Ω–∞")
        self.statusBar().showMessage("–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
